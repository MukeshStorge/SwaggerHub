openapi: 3.0.1
info:
  title: Nimbus - Api Documentation
  description: Nimbus services
  contact: {}
  version: 3.0.0
servers:
  - url: https://nimbus.northernarc.com/notifications
    description: Generated server url

tags:
  - name: Notification - Attachments
    description: Attachments Information
  - name: Common - Notifications
    description: Notifications
  - name: Notifications Aggregator
    description: Notifications - Aggregator
  - name: Common - Notifications Types
    description: Notifications Types
  - name: Common - Report Engine
    description: Report Engine Controller
  - name: ValueFirst - SMS
    description: ValueFirst - SMS
paths:
  /api/report/generate:
    put:
      tags:
        - Common - Report Engine
      description: Generate Report
      operationId: generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportHelper'
        required: true
      responses:
        '200':
          description: SUCCESS
          content:
            '*/*':
              schema:
                type: object
  /api/notification:
    put:
      tags:
        - Common - Notifications
      description: Notify
      operationId: notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateHelper'
        required: true
      responses:
        '201':
          description: notified
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notifications'
  /api/notification/vf/update/tokenMap:
    put:
      tags:
        - ValueFirst - SMS
      description: Update User-Token Map
      operationId: updateTokenMap
      responses:
        '200':
          description: OK
  /api/notification/type/updateTypes:
    put:
      tags:
        - Common - Notifications
      operationId: updateNotificationTypes
      responses:
        '200':
          description: OK
  /api/notification/type/markallasread:
    put:
      tags:
        - Common - Notifications
      description: Mark all as Read & based on Type
      operationId: markAllAsRead
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '201':
          description: Marked all as Read & based on Type
  /api/notification/type/id/{typeId}:
    put:
      tags:
        - Common - Notifications Types
      description: Updated New information
      operationId: updateNotificationType
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationType'
        required: true
      responses:
        '201':
          description: Succesfully Updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationType'
    delete:
      tags:
        - Common - Notifications Types
      description: Delete notification type channel
      operationId: deleteNotificationTypeChannel
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Succesfully deleted
  /api/notification/markasread:
    put:
      tags:
        - Common - Notifications
      description: Mark as Read by notificationId
      operationId: markAsRead
      parameters:
        - name: notificationId
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '201':
          description: Mark as Read by notificationId
  /api/notification/channel/{channelId}:
    put:
      tags:
        - Common - Notifications
      description: Notify through a particular channel
      operationId: notify_1
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateHelper'
        required: true
      responses:
        '201':
          description: notified
          content:
            '*/*':
              schema:
                type: object
  /api/notification/appId/markallasread:
    put:
      tags:
        - Common - Notifications
      description: Mark all as Read & based on AppId
      operationId: markAllAsReadByAppId
      parameters:
        - name: appId
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Marked all as Read & based on AppId
  /api/notification/aggregator/sentConsolidatedDocumentMail:
    put:
      tags:
        - Notifications Aggregator
      description: Sent Consolidate Document Mail
      operationId: sentConsolidateDocumentMail
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TemplateHelper'
        required: true
      responses:
        '201':
          description: Sent Consolidate Document Mail
  /api/notification/vf/push/sms:
    post:
      tags:
        - ValueFirst - SMS
      description: Push SMS
      operationId: sendSMS
      parameters:
        - name: credentialId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueFirstRequestModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/type:
    get:
      tags:
        - Common - Notifications Types
      operationId: getNotificationType
      parameters:
        - name: typeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationType'
    post:
      tags:
        - Common - Notifications Types
      description: Add New information
      operationId: addNotificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationType'
        required: true
      responses:
        '201':
          description: Succesfullysaved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationType'
  /api/notification/type/{typeId}/{channelId}/uploadFile:
    post:
      tags:
        - Common - Notifications Types
      description: Add Template for Existing Notification Type
      operationId: uploadFile
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Succesfullysaved
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTypesChannel'
  /api/attachment/{notificationId}/{channelId}/uploadMultipleFiles:
    post:
      tags:
        - Notification - Attachments
      operationId: uploadMultipleFiles
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: files
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileResponse'
  /api/attachment/{notificationId}/{channelId}/uploadFile:
    post:
      tags:
        - Notification - Attachments
      operationId: uploadFile_1
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileResponse'
  /api/notification/vf/token/generate:
    get:
      tags:
        - ValueFirst - SMS
      description: Generate Token
      operationId: generateToken
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/vf/token/enable:
    get:
      tags:
        - ValueFirst - SMS
      description: 'Enable Token : Value -> Token/All'
      operationId: enableToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/vf/token/disable:
    get:
      tags:
        - ValueFirst - SMS
      description: 'Disable Token : Value -> Token/All'
      operationId: disableToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/vf/token/active:
    get:
      tags:
        - ValueFirst - SMS
      description: Get Active Token
      operationId: getActiveToken
      parameters:
        - name: credentialId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/type/{typeId}:
    get:
      tags:
        - Common - Notifications
      operationId: getNotificationTypeById
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationType'
  /api/notification/type/count:
    get:
      tags:
        - Common - Notifications
      description: Get Type & User wise unseen notification count
      operationId: getUnseenNotificationTypeCountByUser
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/id/{notificationId}:
    get:
      tags:
        - Common - Notifications
      operationId: getNotificationById
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notifications'
    delete:
      tags:
        - Common - Notifications
      description: Delete notification
      operationId: deleteNotificationById
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '202':
          description: Succesfully deleted
  /api/notification/count/all:
    get:
      tags:
        - Common - Notifications
      description: 'Get notification count [Value : 1 - unseen, 2 - seen, 3 - all]'
      operationId: getAllNotificationCount
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/count/all/ignoreUser:
    get:
      tags:
        - Common - Notifications
      description: 'Get notification count [Value : 1 - unseen, 2 - seen, 3 - all]'
      operationId: getAllNotificationCountIgnoreUserCheck
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/appId/count:
    get:
      tags:
        - Common - Notifications
      description: Get AppId & User wise notification count
      operationId: getNotificationTypeCountByUserAndAppId
      parameters:
        - name: appId
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/notification/all:
    get:
      tags:
        - Common - Notifications
      description: >-
        Get unseen notification list view [Value : 1 - unseen, 2 - seen, 3 -
        all]
      operationId: getAllNotificationList
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
  /api/notification/all/type/{value}/page/{pageNo}/{pageSize}:
    get:
      tags:
        - Common - Notifications
      description: >-
        Get type & User wise unseen notification list view [Value : 1 - unseen,
        2 - seen, 3 - all]
      operationId: getAllNotificationListByType
      parameters:
        - name: pageNo
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: value
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
  /api/notification/all/type/appId/page/{pageNo}/{pageSize}:
    get:
      tags:
        - Common - Notifications
      description: >-
        Get AppId & TypeId wise notification list view [Value : 1 - unseen, 2 -
        seen, 3 - all]
      operationId: getNotificationListByAppIdandTypeId
      parameters:
        - name: pageNo
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: appId
          in: query
          required: true
          schema:
            type: string
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
  /api/notification/all/ignoreUser:
    get:
      tags:
        - Common - Notifications
      description: >-
        Get unseen notification list view [Value : 1 - unseen, 2 - seen, 3 -
        all]
      operationId: getAllNotificationListIgnoreUserCheck
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
  /api/notification/all/appId/{value}/page/{pageNo}/{pageSize}:
    get:
      tags:
        - Common - Notifications
      description: >-
        Get AppId & User wise notification list view [Value : 1 - unseen, 2 -
        seen, 3 - all]
      operationId: getNotificationListByAppId
      parameters:
        - name: pageNo
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: appId
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
  /api/notification/aggregator/operation/transactions/notification:
    get:
      tags:
        - Notifications Aggregator
      operationId: sendConsolidatedDocumentsMail
      parameters:
        - name: transationIds
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/notification/aggregator/consolidatedDocument:
    get:
      tags:
        - Notifications Aggregator
      description: Document Consolidate
      operationId: getConsolidateDocument
      responses:
        '201':
          description: Document Consolidate
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirFlowNotificationAudit'
  /api/attachment/{notificationId}/{channelId}/allFiles:
    get:
      tags:
        - Notification - Attachments
      operationId: getAllFilesByVersion
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
  /api/attachment/downloadFile/{fileId}:
    get:
      tags:
        - Notification - Attachments
      operationId: downloadFile
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /api/notification/vf/token/delete:
    delete:
      tags:
        - ValueFirst - SMS
      description: 'Delete Token : Value -> Token/All'
      operationId: deleteToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    JsonNode:
      type: object
    ReportConfig:
      type: object
      properties:
        dbClientId:
          type: string
        query:
          type: string
        fileName:
          type: string
        typeId:
          type: integer
          description: Please enter the notification type id applicable for your request
          format: int64
        format:
          type: string
          description: >-
            Format field can have any one of the following values:
            CSV,XLSX,PDF,HTML
    ReportHelper:
      type: object
      properties:
        reportConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ReportConfig'
        toUserEmails:
          type: array
          items:
            type: string
        ccUserEmails:
          type: array
          items:
            type: string
        bccUserEmails:
          type: array
          items:
            type: string
        typeId:
          type: integer
          description: Please enter the notification type id applicable for your request
          format: int64
        notificationContent:
          $ref: '#/components/schemas/JsonNode'
        isNotification:
          type: boolean
    Attachment:
      type: object
      properties:
        fileName:
          type: string
        fileExtension:
          type: string
        file:
          type: string
          format: binary
        fileContentAsBytes:
          type: array
          items:
            type: string
            format: byte
    TemplateHelper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        appId:
          type: string
        typeId:
          type: integer
          format: int64
        content:
          $ref: '#/components/schemas/JsonNode'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        fromUserEmail:
          type: string
        toUserEmails:
          type: array
          items:
            type: string
        ccUserEmails:
          type: array
          items:
            type: string
        bccUserEmails:
          type: array
          items:
            type: string
        toUserMobileNumbers:
          type: array
          items:
            type: string
        productName:
          type: string
        format:
          type: string
        attachmentAsMail:
          type: boolean
        objectId:
          type: string
    NotificationRoutingUrls:
      type: object
      properties:
        notificationRoutingUrlsId:
          $ref: '#/components/schemas/NotificationRoutingUrlsId'
        apiRoutingUrl:
          type: string
        uiRoutingUrl:
          type: string
        notificationRoutingUrlModel:
          $ref: '#/components/schemas/NotifiedChannel'
    NotificationRoutingUrlsId:
      type: object
      properties:
        channelId:
          type: string
        appId:
          type: string
        notificationId:
          type: integer
          format: int64
    Notifications:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        notificationId:
          type: integer
          format: int64
        type:
          type: integer
          format: int64
        objectId:
          type: string
        appId:
          type: string
        notifiedToModel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotifiedTo'
        notifiedCcModel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotifiedCc'
        notifiedChannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotifiedChannel'
    NotifiedCc:
      type: object
      properties:
        notifiedCcId:
          $ref: '#/components/schemas/NotifiedCcId'
        notificationsModel:
          $ref: '#/components/schemas/Notifications'
    NotifiedCcId:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        notifiedTo:
          type: string
    NotifiedChannel:
      type: object
      properties:
        notifiedChannelId:
          $ref: '#/components/schemas/NotifiedChannelId'
        subject:
          type: string
        content:
          type: string
        sentOn:
          type: string
          format: date-time
        attachment:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        notificationRoutingUrls:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotificationRoutingUrls'
        notificationsModel:
          $ref: '#/components/schemas/Notifications'
    NotifiedChannelId:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        channelId:
          type: string
    NotifiedTo:
      type: object
      properties:
        notifiedToId:
          $ref: '#/components/schemas/NotifiedToId'
        viewedOn:
          type: string
          format: date-time
        isViewed:
          type: boolean
        notificationsModel:
          $ref: '#/components/schemas/Notifications'
    NotifiedToId:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        notifiedTo:
          type: string
    Channel:
      type: object
      properties:
        id:
          type: string
    NotificationGroup:
      type: object
      properties:
        id:
          type: string
    NotificationType:
      type: 1
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        status:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        notificationTypeChannel:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotificationTypesChannel'
        notificationGroup:
          $ref: '#/components/schemas/NotificationGroup'
        isRmTag:
          type: boolean
    NotificationTypeChannelId:
      type: object
      properties:
        typeId:
          type: integer
          format: int64
        channelId:
          type: string
    NotificationTypesChannel:
      type: object
      properties:
        notificationTypeChannelId:
          $ref: '#/components/schemas/NotificationTypeChannelId'
        contextTemplate:
          type: string
        subjectTemplate:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        header:
          type: string
        credentials:
          $ref: '#/components/schemas/VendorCredentials'
        otp:
          type: boolean
    Priority:
      type: object
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
    Vendor:
      type: object
      properties:
        id:
          type: string
    VendorCredentials:
      type: object
      properties:
        id:
          type: integer
          format: int64
        vendor:
          $ref: '#/components/schemas/Vendor'
        channelId:
          type: string
        config:
          $ref: '#/components/schemas/JsonNode'
    Address:
      type: object
      properties:
        '@FROM':
          type: string
        '@TO':
          type: string
        '@SEQ':
          type: string
        '@TAG':
          type: string
    DLR:
      type: object
      properties:
        '@URL':
          type: string
    SMS:
      type: object
      properties:
        '@UDH':
          type: string
        '@CODING':
          type: string
        '@TEXT':
          type: string
        '@PROPERTY':
          type: string
        '@ID':
          type: string
        ADDRESS:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    ValueFirstRequestModel:
      type: object
      properties:
        '@VER':
          type: string
        USER:
          type: object
          additionalProperties:
            type: object
        DLR:
          $ref: '#/components/schemas/DLR'
        SMS:
          type: array
          items:
            $ref: '#/components/schemas/SMS'
    FileResponse:
      type: object
      properties:
        fileName:
          type: string
        fileDownloadUri:
          type: string
        fileType:
          type: string
        size:
          type: integer
          format: int64
        fileId:
          type: string
    AirFlowNotificationAudit:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: integer
          format: int64
        lastModifiedDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        content:
          $ref: '#/components/schemas/JsonNode'
        typeId:
          type: integer
          format: int64
        channelId:
          type: string
